Thinking:
    Generic trait system:
        Recursive validation
        Runtime vs compile time polymorphism
        Generated code (Use tracking)
    Compilation:
        Tokenize
        Substitute
        Parse modules
        Rewrite AST
        Validate modules
        Construct tables
        Cross-validate tables
        Convert types/methods
        Generate C code
        Compile C code
    Module Parser implementation:
        AST Node types?
        Maps?
    What is tracked for:
        Compilation Unit
        TopLevelDecl
    Checker Implementation:
        What parts should be checked when?

Coding:
    Split up sections
    Look at null terminators in TokType valid/potential
    TokType reverse map
    ASTNodeType reverse map
    apaz-libc:
        Arena alignment
        Look into temp Arenas
        List new/delete on Arena
        List reduce()
        String read file
        String read lines from file
        String regex match?
        String to/from integral types?
