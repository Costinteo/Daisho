#!/bin/python

from os import makedev


write_to = 'ASTNodeType.h'

# [name, [[key, type], [key, type], ...]]

node_types = [

]


def makeNew(f, node_types):
    for t in node_types:
        signature = ''.join([f', {type} {key}' for key, type in t[1]])
        f.write(
            f"static inline ASTNode* ASTNode_{t[0]}_new(Arena* arena{signature}) {{ }}\n")

def makeGet(f, node_types):
    for t in node_types:
        for key, type in t[1]:
            f.write(
                f"static inline {type} ASTNode_{t[0]}_get_{key}(ASTNode* node) {{ }}")

def makeSet(f, node_types):
    for t in node_types:
        for key, type in t[1]:
            f.write(
                f"static inline void ASTNode_{t[0]}_set_{key}(ASTNode* node, {type} {key}) {{ }}")

def makeDestroy(f, node_types):
    for t in node_types:
        for key, type in t[1]:
            f.write(
                f"static inline void ASTNode_{t[0]}_destroy(ASTNode* node) {{ }}")

with open(write_to, 'w') as f:
    f.write('// THIS FILE GENERATED BY GenNodeTypes.py. DO NOT EDIT.\n')
    f.write('#ifndef INCLUDE_ASTNODETYPE\n')
    f.write('#define INCLUDE_ASTNODETYPE\n')
    f.write('#include <apaz-libc.h>\n\n')

    makeNew(f, node_types)
    makeGet(f, node_types)
    makeSet(f, node_types)
    makeDestroy(f, node_types)

    f.write('#endif // INCLUDE_ASTNODETYPE')
