#!/bin/python

# [name, [[type, key], [type, key], ...]]

node_types = [
    ['TopLevelDeclaration', [['char*', 'name'], ['int', 'status']]],
]


def makeNew(f, node_types):
    for t in node_types:
        signature = ''.join([f', {tup[0]} {tup[1]}' for tup in t[1]])
        sizesum = '+'.join([f'sizeof({tup[0]})' for tup in t[1]])
        f.write(
            f"static inline ASTNode* ASTNode_{t[0]}_new(Arena* arena{signature}) {{ }}\n")


def makeGet(f, node_types):
    for t in node_types:
        for tup in t[1]:
            f.write(
                f"static inline {tup[0]} ASTNode_{t[0]}_get_{tup[1]}(ASTNode* node) {{ }}\n")


def makeSet(f, node_types):
    for t in node_types:
        for tup in t[1]:
            f.write(
                f"static inline void ASTNode_{t[0]}_set_{tup[1]}(ASTNode* node, {tup[0]} {tup[1]}) {{ }}\n")


def makeDestroy(f, node_types):
    for t in node_types:
        f.write(
            f"static inline void ASTNode_{t[0]}_destroy(ASTNode* node) {{ }}\n")

def makeEnum(f, node_types):
    f.write('enum ASTNodeType {\n')
    [f.write(f'  {t[0]},\n') for t in node_types]
    f.write('};\ntypedef enum ASTNodeType ASTNodeType;\n')

with open('ASTNodeType.h', 'w') as f:
    f.write('// THIS FILE GENERATED BY GenNodeTypes.py. DO NOT EDIT.\n')
    f.write('#ifndef INCLUDE_ASTNODETYPE\n')
    f.write('#define INCLUDE_ASTNODETYPE\n')
    f.write('#include <apaz-libc.h>\n')

    makeEnum(f, node_types)

    f.write('#endif // INCLUDE_ASTNODETYPE')

with open('ASTNodeMethods.h', 'w') as f:
    f.write('// THIS FILE GENERATED BY GenNodeTypes.py. DO NOT EDIT.\n')
    f.write('#ifndef INCLUDE_ASTNODEMETHODS\n')
    f.write('#define INCLUDE_ASTNODEMETHODS\n')
    f.write('#include <apaz-libc.h>\n')
    f.write('#include "ASTNodeType.h"\n\n')
    f.write('// To appease the linter.\n')
    f.write('// Find definitions in StructDeclarations.h.\n')
    f.write('struct ASTNode;\n')
    f.write('typedef struct ASTNode ASTNode;\n\n')

    makeNew(f, node_types)
    makeGet(f, node_types)
    makeSet(f, node_types)
    makeDestroy(f, node_types)

    f.write('#endif // INCLUDE_ASTNODEMETHODS')